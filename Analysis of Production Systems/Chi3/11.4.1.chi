#======================================================================
#==== ~ EX 11.4.1 ~ ====================================================
#====  TEMPLATE VERSION 1.0, (c) 2020 Jelle Langedijk =================
#====  https://github.com/JelleLa/templates/blob/master/Chi3/model.chi=

# Exersice does not state much, but they assume a infinite size fifo buffer.

#ct = conveyor time
#id = product ID


type item = tuple(int id; real tt),
conv_item = tuple(item x; timer t);


proc G(chan! item gb):
    for i in range (0,1001):
        gb!(i, time);
        delay 2
    end
end

proc B(chan? item gb; chan! item bt):
    item x;
    list item xs;

    while true:
        select gb?x:
            xs = xs + [x];               # Add product to buffer
        alt size(xs) > 0, bt!xs[0]:     # Remove product assuming FIFO
            xs = xs[1:];

        end
    end
end

proc T(chan? item bt; chan! item te):
        dist real stoch = exponential(4.0);
        item x;
        list conv_item xs;

        while true:
            select size (xs) < 3,  bt?x:
                xs = xs + [(x, timer (sample stoch))] ;               # Add product to buffer
            alt size(xs) > 0 and ready(xs[0].t), te!xs[0].x:     # first product reaches end conveyor
                xs = xs[1:];

        end
    end
end

proc E(chan item te):
        item x;
        real aft;

        while true:
            te?x;
            aft = (time - x.tt); #AFT: how long it takes for a product to go through all locations
            writeln("Receive time %s, AFT = %s", x, aft);
        end
end

model M():
    chan item gb, bt, te;

    run
    G(gb), B(gb, bt), T(bt, te), E(te);

end
